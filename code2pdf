#!/usr/bin/env python3
import sys
from os.path import isdir, join
from os import walk

def get_extension(filename):
    if len(filename.split('.')) <= 1:
        return ''
    return filename.split('.')[-1]

def is_path_in_path(root, path):
    find_pos = root.find(path)

    print(find_pos, root, path);
    if find_pos == -1 or len(root) < len(path):
        return False

    if find_pos == 0 and len(path) == len(root):
        return True

    if find_pos == 0 and root[len(path)] == '/':
        return True

    if root[find_pos - 1] == '/' and len(root) == find_pos + len(path):
        return True

    if (root[find_pos - 1] == '/' and len(root) > find_pos + len(path) 
            and root[find_pos + len(path)] == '/'):
        return True
    return False

def main(args):
    if len(args) == 0:
        print("ERROR: directory not provided")
        return

    if not isdir(args[0]):
        print("ERROR: first argument is not directory")
        return

    i = 0
    exclude_string = ''
    while i < len(args):
        if args[i] == '-e':
            i += 1
            exclude_string = args[i]

        i += 1

    exclude_paths = exclude_string.split(',')
    print(exclude_paths)

    directory = args[0]
    files = [join(root, name)
            for root, dirs, files in walk(directory)
            for name in files
            if name not in exclude_paths and 
            not any([is_path_in_path(root, path)
                for path in exclude_paths])]
    print(files)

    output = open("out.md", "w")

    for idx, code in enumerate(files, 1):
        print(f"LOG: writing file {code} to markdown [{idx}/{len(files)}]")
        output.write(f"# {code}\n```{get_extension(code)}\n")
        with open(code) as src:
            for line in src:
                output.write(line)
        output.write(f"\n```\n\n")

    output.close()
    return

# TODO(#2): convert markdown to pdf
# TODO(#3): add summary option
if __name__ == "__main__":
    main(sys.argv[1:])
